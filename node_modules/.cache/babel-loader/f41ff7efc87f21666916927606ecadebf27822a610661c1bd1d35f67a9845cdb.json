{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zeped\\\\springboard\\\\projects\\\\react\\\\space-travel\\\\src\\\\pages\\\\Planets\\\\Planets.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useContext } from \"react\";\nimport styles from \"./Planets.module.css\";\nimport { LoadingContext } from \"../../context/LoadingProvider\";\nimport SpaceTravelApi from \"../../services/SpaceTravelApi\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Planets() {\n  _s();\n  const [planetsWithSpacecrafts, setPlanetsWithSpacecrafts] = useState([]);\n  const {\n    isLoading,\n    enableLoading,\n    disableLoading\n  } = useContext(LoadingContext);\n  const [selectedPlanetId, setSelectedPlanetId] = useState();\n  const [selectedSpacecraftId, setSelectedSpacecraftId] = useState();\n  async function getPlanetsWithSpacecrafts() {\n    const {\n      data: planets,\n      isError: isErrorPlanets\n    } = await SpaceTravelApi.getPlanets();\n    const {\n      data: spacecrafts,\n      isError: isErrorSpacecrafts\n    } = await SpaceTravelApi.getSpacecrafts();\n    if (!isErrorPlanets && !isErrorSpacecrafts) {\n      // todo fill planets.spacecrafts with spacecrafts\n      for (const planet of planets) {\n        planet.spacecrafts = [];\n        for (const spacecraft of spacecrafts) {\n          if (planet.id === spacecraft.currentLocation) {\n            planet.spacecrafts.push(spacecraft);\n          }\n        }\n      }\n      setPlanetsWithSpacecrafts(planets);\n    }\n  }\n  useEffect(() => {\n    async function runGetPlanetsWithSpacecrafts() {\n      enableLoading();\n      await getPlanetsWithSpacecrafts();\n      disableLoading();\n    }\n    runGetPlanetsWithSpacecrafts();\n  }, [enableLoading, disableLoading]);\n  function handleClickOfPlanet(event, id) {\n    // todo set the selected planet\n  }\n  async function handleClickOfSpacecraft(event, spacecraftId, planetId) {\n    // todo set the selected spacecraft\n    // todo send spacecraft to planet using the API\n    // todo call getPlanetsWithSpacecrafts to refresh the page content\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: planetsWithSpacecrafts.map((planet, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"planetWithSpacecrafts\"],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles[\"planet\"]} ${selectedPlanetId === planet.id && styles[\"planet--selected\"]}`,\n        onClick: event => handleClickOfPlanet(event, planet.id),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"planet__imageContainer\"],\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: planet.pictureUrl,\n            alt: `The planet ${planet.name}`,\n            className: styles[\"planet__image\"]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles[\"planet__info\"],\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: planet.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: planet.currentPopulation\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"planet__spacecrafts\"],\n        children: planet.spacecrafts.map((spacecraft, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles[\"planet__spacecraft\"]} ${selectedSpacecraftId === spacecraft.id && styles[\"planet__spacecraft--selected\"]}`,\n          onClick: event => handleClickOfSpacecraft(event, spacecraft.id, planet.id),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: styles[\"planet__spacecraft__imageContainer\"],\n            children: spacecraft.pictureUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: spacecraft.pictureUrl,\n              alt: `The spacecraft ${spacecraft.name}`,\n              className: styles[\"planet__spacecraft__image\"]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: styles[\"planet__spacecraft__image--default\"],\n              children: \"\\uD83D\\uDE80\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"planet__spacecraft__info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: spacecraft.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: spacecraft.capacity\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_s(Planets, \"LWaOL4tB6B78tVpseQPdn5hylfw=\");\n_c = Planets;\nexport default Planets;\nvar _c;\n$RefreshReg$(_c, \"Planets\");","map":{"version":3,"names":["useState","useEffect","useContext","styles","LoadingContext","SpaceTravelApi","jsxDEV","_jsxDEV","Fragment","_Fragment","Planets","_s","planetsWithSpacecrafts","setPlanetsWithSpacecrafts","isLoading","enableLoading","disableLoading","selectedPlanetId","setSelectedPlanetId","selectedSpacecraftId","setSelectedSpacecraftId","getPlanetsWithSpacecrafts","data","planets","isError","isErrorPlanets","getPlanets","spacecrafts","isErrorSpacecrafts","getSpacecrafts","planet","spacecraft","id","currentLocation","push","runGetPlanetsWithSpacecrafts","handleClickOfPlanet","event","handleClickOfSpacecraft","spacecraftId","planetId","children","map","index","className","onClick","src","pictureUrl","alt","name","fileName","_jsxFileName","lineNumber","columnNumber","currentPopulation","capacity","_c","$RefreshReg$"],"sources":["C:/Users/zeped/springboard/projects/react/space-travel/src/pages/Planets/Planets.js"],"sourcesContent":["import { useState, useEffect, useContext } from \"react\";\n\nimport styles from \"./Planets.module.css\";\nimport { LoadingContext } from \"../../context/LoadingProvider\";\nimport SpaceTravelApi from \"../../services/SpaceTravelApi\";\n\nfunction Planets() {\n  const [planetsWithSpacecrafts, setPlanetsWithSpacecrafts] = useState([]);\n  const { isLoading, enableLoading, disableLoading } =\n    useContext(LoadingContext);\n  const [selectedPlanetId, setSelectedPlanetId] = useState();\n  const [selectedSpacecraftId, setSelectedSpacecraftId] = useState();\n\n  async function getPlanetsWithSpacecrafts() {\n    const { data: planets, isError: isErrorPlanets } =\n      await SpaceTravelApi.getPlanets();\n    const { data: spacecrafts, isError: isErrorSpacecrafts } =\n      await SpaceTravelApi.getSpacecrafts();\n\n    if (!isErrorPlanets && !isErrorSpacecrafts) {\n      // todo fill planets.spacecrafts with spacecrafts\n      for (const planet of planets) {\n        planet.spacecrafts = [];\n\n        for (const spacecraft of spacecrafts) {\n          if (planet.id === spacecraft.currentLocation) {\n            planet.spacecrafts.push(spacecraft);\n          }\n        }\n      }\n\n      setPlanetsWithSpacecrafts(planets);\n    }\n  }\n\n  useEffect(() => {\n    async function runGetPlanetsWithSpacecrafts() {\n      enableLoading();\n      await getPlanetsWithSpacecrafts();\n      disableLoading();\n    }\n\n    runGetPlanetsWithSpacecrafts();\n  }, [enableLoading, disableLoading]);\n\n  function handleClickOfPlanet(event, id) {\n    // todo set the selected planet\n  }\n\n  async function handleClickOfSpacecraft(event, spacecraftId, planetId) {\n    // todo set the selected spacecraft\n    // todo send spacecraft to planet using the API\n    // todo call getPlanetsWithSpacecrafts to refresh the page content\n  }\n\n  return (\n    <>\n      {planetsWithSpacecrafts.map((planet, index) => (\n        <div key={index} className={styles[\"planetWithSpacecrafts\"]}>\n          <div\n            className={`${styles[\"planet\"]} ${\n              selectedPlanetId === planet.id && styles[\"planet--selected\"]\n            }`}\n            onClick={(event) => handleClickOfPlanet(event, planet.id)}\n          >\n            <div className={styles[\"planet__imageContainer\"]}>\n              <img\n                src={planet.pictureUrl}\n                alt={`The planet ${planet.name}`}\n                className={styles[\"planet__image\"]}\n              />\n            </div>\n\n            <div className={styles[\"planet__info\"]}>\n              <div>{planet.name}</div>\n              <div>{planet.currentPopulation}</div>\n            </div>\n          </div>\n\n          <div className={styles[\"planet__spacecrafts\"]}>\n            {planet.spacecrafts.map((spacecraft, index) => (\n              <div\n                key={index}\n                className={`${styles[\"planet__spacecraft\"]} ${\n                  selectedSpacecraftId === spacecraft.id &&\n                  styles[\"planet__spacecraft--selected\"]\n                }`}\n                onClick={(event) =>\n                  handleClickOfSpacecraft(event, spacecraft.id, planet.id)\n                }\n              >\n                <div className={styles[\"planet__spacecraft__imageContainer\"]}>\n                  {spacecraft.pictureUrl ? (\n                    <img\n                      src={spacecraft.pictureUrl}\n                      alt={`The spacecraft ${spacecraft.name}`}\n                      className={styles[\"planet__spacecraft__image\"]}\n                    />\n                  ) : (\n                    <span\n                      className={styles[\"planet__spacecraft__image--default\"]}\n                    >\n                      🚀\n                    </span>\n                  )}\n                </div>\n                <div className={\"planet__spacecraft__info\"}>\n                  <div>{spacecraft.name}</div>\n                  <div>{spacecraft.capacity}</div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      ))}\n    </>\n  );\n}\n\nexport default Planets;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}